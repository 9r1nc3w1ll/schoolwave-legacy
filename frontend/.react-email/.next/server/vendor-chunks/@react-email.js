"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-email";
exports.ids = ["vendor-chunks/@react-email"];
exports.modules = {

/***/ "(rsc)/./node_modules/@react-email/render/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@react-email/render/dist/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    render: ()=>render,\n    renderAsync: ()=>renderAsync\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/render.ts\nvar ReactDomServer = __toESM(__webpack_require__(/*! react-dom/server */ \"(rsc)/./node_modules/next/dist/compiled/react-dom/server.js\"));\nvar import_html_to_text = __webpack_require__(/*! html-to-text */ \"(rsc)/./node_modules/html-to-text/lib/html-to-text.cjs\");\nvar import_pretty = __toESM(__webpack_require__(/*! pretty */ \"(rsc)/./node_modules/pretty/index.js\"));\nvar render = (component, options)=>{\n    if (options == null ? void 0 : options.plainText) {\n        return renderAsPlainText(component, options);\n    }\n    const doctype = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n    const markup = ReactDomServer.renderToStaticMarkup(component);\n    const document = `${doctype}${markup}`;\n    if (options && options.pretty) {\n        return (0, import_pretty.default)(document);\n    }\n    return document;\n};\nvar renderAsPlainText = (component, _options)=>{\n    return (0, import_html_to_text.convert)(ReactDomServer.renderToStaticMarkup(component), {\n        selectors: [\n            {\n                selector: \"img\",\n                format: \"skip\"\n            },\n            {\n                selector: \"#__react-email-preview\",\n                format: \"skip\"\n            }\n        ]\n    });\n};\n// src/renderAsync.ts\nvar import_html_to_text2 = __webpack_require__(/*! html-to-text */ \"(rsc)/./node_modules/html-to-text/lib/html-to-text.cjs\");\nvar import_pretty2 = __toESM(__webpack_require__(/*! pretty */ \"(rsc)/./node_modules/pretty/index.js\"));\nvar import_server = __webpack_require__(/*! react-dom/server */ \"(rsc)/./node_modules/next/dist/compiled/react-dom/server.js\");\nasync function renderToString(children) {\n    const stream = await (0, import_server.renderToReadableStream)(children);\n    const html = await readableStreamToString(stream);\n    return html.replace(/^<!DOCTYPE html>/, \"\").replace(/<!-- -->/g, \"\");\n}\nasync function readableStreamToString(readableStream) {\n    let result = \"\";\n    const decoder = new TextDecoder();\n    for await (const chunk of readableStream){\n        result += decoder.decode(chunk);\n    }\n    return result;\n}\nvar renderAsync = async (component, options)=>{\n    const markup = typeof import_server.renderToStaticMarkup === \"undefined\" ? await renderToString(component) : (0, import_server.renderToStaticMarkup)(component);\n    if (options == null ? void 0 : options.plainText) {\n        return (0, import_html_to_text2.convert)(markup, {\n            selectors: [\n                {\n                    selector: \"img\",\n                    format: \"skip\"\n                },\n                {\n                    selector: \"#__react-email-preview\",\n                    format: \"skip\"\n                }\n            ]\n        });\n    }\n    const doctype = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n    const document = `${doctype}${markup}`;\n    if (options == null ? void 0 : options.pretty) {\n        return (0, import_pretty2.default)(document);\n    }\n    return document;\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@react-email/render/dist/index.js\n");

/***/ })

};
;