name: integration
on: [push]
jobs:
  integration:
    name: Checks 🧐
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: NPM Test and Build
        working-directory: ./frontend
        run: |
          npm i
          npm run lint
          npm run build
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Run Unit Tests
        working-directory: ./backend
        run: |
          mv .env.testing .env
          docker compose up -d
          docker compose exec -it app bash -c ". ./.venv/bin/activate &&  python manage.py test"
  e2e:
    name: Run e2e tests
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Start backend stack
        working-directory: ./backend
        run: |
          mv .env.testing .env
          docker compose up -d
      - name: Run e2e tests
        uses: cypress-io/github-action@v3
        with:
          working-directory: ./frontend
          browser: chrome
          install: true
          build: npm run build
          start: npm start
          wait-on: "http://localhost:3000"
